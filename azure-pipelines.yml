# # Starter pipeline
# # Start with a minimal pipeline that you can customize to build and deploy your code.
# # Add steps that build, run tests, deploy, and more:
# # https://aka.ms/yaml

# # trigger:
# # - master

# # stages:
# #   - stage: Build
# #     pool:
# #       vmImage: ubuntu-latest
# #     variables:
# #       version: $(nextRelease)

# #     jobs:
# #     - job:
# #       displayName: "Configuring Node"
# #       workspace:
# #         clean: all
# #       steps:
# #         - task: NodeTool@0
# #           inputs:
# #             versionSpec: "16.x"
# #           displayName: "Install Node.js"
          
# #         - task: Npm@1
# #           inputs:
# #             command: "install"
# #           displayName: "Npm Install"
# #         - task: CmdLine@2
# #           inputs:
# #             script: 'ls .'
# #             workingDirectory: '.'
# #         - script: >
# #             npx semantic-release
# #           env: { GH_TOKEN: $(secrets.azure-artifacts) }
# #           displayName: "Semantic release"


# jobs:
# - job: Build
#   pool:
#     vmImage: windows-latest

#   steps:
#   - task: Npm@1
#     inputs:
#       command: "install"
#     displayName: "Npm Install"

#   - script: >
#       npx -p semantic-release
#       -p semantic-release-ado
#       semantic-release
      
#     env: { GH_TOKEN: $(GIT_ACCESS_TOKEN) }
#     displayName: 'Semantic release'

#   - script: echo $(nextRelease)
#     displayName: 'Show next version'

#   - task: CmdLine@2
#     inputs:
#       script: 'bash code.bash'

#   - task: Npm@1
#     inputs:
#       command: 'publish'
#       publishRegistry: 'useFeed'
#       publishFeed: '1ebebcd4-a114-4cf3-957d-2a9c5f11c58d/628b9ae3-6fce-4079-a602-4458942931c5'



# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - master

# stages:
#   - stage: Build
#     pool:
#       vmImage: ubuntu-latest
#     variables:
#       version: $(nextRelease)

#     jobs:
#     - job:
#       displayName: "Configuring Node"
#       workspace:
#         clean: all
#       steps:
#         - task: NodeTool@0
#           inputs:
#             versionSpec: "16.x"
#           displayName: "Install Node.js"
          
#         - task: Npm@1
#           inputs:
#             command: "install"
#           displayName: "Npm Install"
#         - task: CmdLine@2
#           inputs:
#             script: 'ls .'
#             workingDirectory: '.'
#         - script: >
#             npx semantic-release
#           env: { GH_TOKEN: $(secrets.azure-artifacts) }
#           displayName: "Semantic release"


# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - master

# stages:
#   - stage: Build
#     pool:
#       vmImage: ubuntu-latest
#     variables:
#       version: $(nextRelease)

#     jobs:
#     - job:
#       displayName: "Configuring Node"
#       workspace:
#         clean: all
#       steps:
#         - task: NodeTool@0
#           inputs:
#             versionSpec: "16.x"
#           displayName: "Install Node.js"
          
#         - task: Npm@1
#           inputs:
#             command: "install"
#           displayName: "Npm Install"
#         - task: CmdLine@2
#           inputs:
#             script: 'ls .'
#             workingDirectory: '.'
#         - script: >
#             npx semantic-release
#           env: { GH_TOKEN: $(secrets.azure-artifacts) }
#           displayName: "Semantic release"


# jobs:
# - job: Build
#   pool:
#     vmImage: windows-latest

#   steps:
#   # - task: Npm@1
#   #   inputs:
#   #     command: "install"
#   #   displayName: "Npm Install"

#   - script: >
#       npx -p semantic-release
#       -p semantic-release-ado
#       semantic-release
      
#     env: { GH_TOKEN: $(GIT_ACCESS_TOKEN) }
#     displayName: 'Semantic release'

#   - script: echo $nextRelease
#     displayName: 'Show next version'


#   - task: Bash@3
#     inputs:
#       filePath: 'code.bash'
#     displayName: "bash script running"
#   # - task: CmdLine@2
#   #   inputs:
#   #     script: 'set New_version="%nextRelease%"'
#   #     workingDirectory: '.'
    
#   # - task: CmdLine@2
#   #   inputs:
#   #     script: 'bash code.bash'
#   #     workingDirectory: '.'


jobs:
- job: Build
  pool:
    vmImage: windows-latest
  steps:
  - script: >
      npx -p semantic-release
      -p semantic-release-ado
      semantic-release
    env: { GH_TOKEN: $(GIT_ACCESS_TOKEN) }
    displayName: 'Semantic release'

  - script: echo $(nextRelease)
    displayName: 'Show next version'
  

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: echo $MYSECRET && mystr="$(grep "version" package.json)" && echo $mystr
    env:
      MYSECRET: $(nextRelease)


  # - task: Bash@3
  #   inputs:
  #     filePath: 'code.bash'
  #     bashEnvValue: 'new_version=$nextRelease'
  #   displayName: "bash script running"
  
  # - task: Npm@1
  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #     ArtifactName: 'drop'
  #     publishLocation: 'Container'
  #   inputs:
  #     command: 'publish'
  #     publishRegistry: 'useFeed'
  #     publishFeed: '1ebebcd4-a114-4cf3-957d-2a9c5f11c58d/628b9ae3-6fce-4079-a602-4458942931c5'
